
from OpenGL.GL import *
from OpenGL.GLU import *
import pygame



def main():
    pygame.init()
    display = (800, 600)
    pygame.display.set_mode(display, pygame.DOUBLEBUF | pygame.OPENGL)
    gluPerspective(45, (display[0] / display[1]), 0.1, 50.0)
    glTranslate(0.0, 0.0, -5)
    clock = pygame.time.Clock()
    while True:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                quit()

        glRotatef(1, 0, 1, 0)
        glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)
        glEnable(GL_DEPTH_TEST)
        glDisable(GL_CULL_FACE)
        x = 1
        x1 = 0.8
        x2 = 0.6
        y = -1
        y1 = -0.2
        y2 = 0.8
        y3 = 1.8
        glColor3f(1, 1, 1)
        ## FirstCube
        glBegin(GL_POLYGON_BIT)
        glVertex3f(x,y,x)
        glVertex3f(-x,y,x)
        glVertex3f(x, y1, x)
        glVertex3f(-x, y1, x)
        glEnd()


        glBegin(GL_POLYGON_BIT)
        glVertex3f(x, y, -x)
        glVertex3f(-x, y, -x)
        glVertex3f(x, y1, -x)
        glVertex3f(-x, y1, -x)
        glEnd()

        glBegin(GL_POLYGON_BIT)
        glVertex3f(-x, y, x)
        glVertex3f(-x, y, -x)
        glVertex3f(-x, y1, x)
        glVertex3f(-x, y1, -x)
        glEnd()

        glBegin(GL_POLYGON_BIT)
        glVertex3f(x, y, x)
        glVertex3f(x, y, -x)
        glVertex3f(x, y1, x)
        glVertex3f(x, y1, -x)
        glEnd()

        #SecondCube

        glBegin(GL_POLYGON_BIT)
        glVertex3f(x1, y1, x1)
        glVertex3f(-x1, y1, x1)
        glVertex3f(x1, y2, x1)
        glVertex3f(-x1, y2, x1)
        glEnd()

        glBegin(GL_POLYGON_BIT)
        glVertex3f(x1, y1, -x1)
        glVertex3f(-x1, y1, -x1)
        glVertex3f(x1, y2, -x1)
        glVertex3f(-x1, y2, -x1)
        glEnd()

        glBegin(GL_POLYGON_BIT)
        glVertex3f(-x1, y1, x1)
        glVertex3f(-x1, y1, -x1)
        glVertex3f(-x1, y2, x1)
        glVertex3f(-x1, y2, -x1)
        glEnd()

        glBegin(GL_POLYGON_BIT)
        glVertex3f(x1, y1, x1)
        glVertex3f(x1, y1, -x1)
        glVertex3f(x1, y2, x1)
        glVertex3f(x1, y2, -x1)
        glEnd()

        # ThirdCube

        glBegin(GL_POLYGON_BIT)
        glVertex3f(x2, y2, x2)
        glVertex3f(-x2, y2, x2)
        glVertex3f(x2, y3, x2)
        glVertex3f(-x2, y3, x2)
        glEnd()

        glBegin(GL_POLYGON_BIT)
        glVertex3f(x2, y2, -x2)
        glVertex3f(-x2, y2, -x2)
        glVertex3f(x2, y3, -x2)
        glVertex3f(-x2, y3, -x2)
        glEnd()

        glBegin(GL_POLYGON_BIT)
        glVertex3f(-x2, y2, x2)
        glVertex3f(-x2, y2, -x2)
        glVertex3f(-x2, y3, x2)
        glVertex3f(-x2, y3, -x2)
        glEnd()

        glBegin(GL_POLYGON_BIT)
        glVertex3f(x2, y2, x2)
        glVertex3f(x2, y2, -x2)
        glVertex3f(x2, y3, x2)
        glVertex3f(x2, y3, -x2)
        glEnd()

        #Face
        #EyeL
        xEl1 = -0.5
        xEl2 = -0.2
        yEl1 = 1.3
        yEl2 = 1.6

        glBegin(GL_POLYGON_BIT)
        glColor3f(0, 0, 0)
        glVertex3f(xEl1, yEl1, x2 + 0.1)
        glVertex3f(xEl1, yEl2, x2 + 0.1)
        glVertex3f(xEl2, yEl1, x2 + 0.1)
        glVertex3f(xEl2, yEl2, x2 + 0.1)

        glEnd()
        #EyeR
        glBegin(GL_POLYGON_BIT)
        glColor3f(0, 0, 0)
        glVertex3f(-xEl1, yEl1, x2 + 0.1)
        glVertex3f(-xEl1, yEl2, x2 + 0.1)
        glVertex3f(-xEl2, yEl1, x2 + 0.1)
        glVertex3f(-xEl2, yEl2, x2 + 0.1)
        glEnd()
        #Smile
        glBegin(GL_POLYGON_BIT)
        glColor3f(0, 0, 0)
        glVertex3f(-0.5, 1, x2 + 0.1)
        glVertex3f(-0.5, 1.2, x2 + 0.1)
        glVertex3f(0.5, 1.2, x2 + 0.1)
        glVertex3f(0.5, 1, x2 + 0.1)
        glEnd()

        pygame.display.flip()
        clock.tick(60)

if __name__ == '__main__':
    main()